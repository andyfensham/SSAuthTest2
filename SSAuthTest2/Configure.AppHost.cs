using Funq;
using ServiceStack;
using ServiceStack.Admin;
using ServiceStack.Data;
using ServiceStack.Formats;
using ServiceStack.Logging;
using ServiceStack.Text;
using SSAuthTest2.ServiceInterface;

[assembly: HostingStartup(typeof(SSAuthTest2.AppHost))]

namespace SSAuthTest2
{
    public class AppHost : AppHostBase, IHostingStartup
    {
        public void Configure(IWebHostBuilder builder) => builder
            .ConfigureServices(services => {
            // Configure ASP.NET Core IOC Dependencies
        })
            .Configure(app => {
            // Configure ASP.NET Core App
            if (!HasInit)
                    app.UseServiceStack(new AppHost());
            });

        public AppHost() : base("SSAuthTest2", typeof(MyServices).Assembly) { }

        public override void Configure(Container container)
        {
            // Configure ServiceStack only IOC, Config & Plugins
            SetConfig(new HostConfig
            {
                UseSameSiteCookies = true,
                AdminAuthSecret = "secretzbuzz911",
                //UseCamelCase = false,
            });

            Plugins.Add(new AdminUsersFeature());
            Plugins.Add(new RequestLogsFeature());


            LogManager.LogFactory = new ConsoleLogFactory(debugEnabled: true);

            Plugins.Add(new SessionFeature());

            container.AddSingleton<ICrudEvents>(c => new OrmLiteCrudEvents(c.Resolve<IDbConnectionFactory>()));
            container.Resolve<ICrudEvents>().InitSchema();

            //JsConfig.Init(new ServiceStack.Text.Config
            //{
            //    TextCase = TextCase.SnakeCase
            //});

            HtmlFormat.TitleFormat = @"{0} Snapshot of {1}";
            HtmlFormat.HtmlTitleFormat = @"Snapshot of <i>{0}</i> generated by <a href=""https://scadsoftware.com"">SCAD Software</a> on <b>{1}</b>";
        }
    }

}

